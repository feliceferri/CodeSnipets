have to add the following attributes to the controllers

[Route("api/[controller]")]
[ApiController]

Each method needs to have its attribute tag like

[HttpPost] //[HttpGet("{id:guid}/{version:int}")]
[ProducesResponseType(StatusCodes.Status201Created, Type = typeof(ObjectHere))]
[ProducesResponseType(StatusCodes.Status404NotFound)]
[ProducesResponseType(StatusCodes.Status500InternalServerError)]
[SwaggerOperation(Summary = "Perform a (xxx", 
                            Description = @"More details xxxx")]

 public async Task<ActionResult<Models.FunctionalSafety.DB.Template>> Test(Type dto)

Startup.cs


ConfigureServices()

services.AddSwaggerGen(c =>
            {
                c.EnableAnnotations();
                c.SwaggerDoc("v1", new Microsoft.OpenApi.Models.OpenApiInfo { Title = "WebApi", Version = "v1" });
		c.CustomSchemaIds(x => x.FullName); //Full Namespace, avoids Swagger dupplication error 
            });

*** EnableAnnotations is a separate nuget =>  Swashbuckle.AspNetCore.Annotations

Configure()

app.UseSwagger();
app.UseSwaggerUI(c => c.SwaggerEndpoint("/swagger/v1/swagger.json", "WebApi v1"));

----------------------------

DETAILS OF AN SWAGGER ERROR

https://localhost:44353/swagger/v1/swagger.json

-----------------------------


AUTH LOCK ON SWAGGER

using Microsoft.OpenApi.Models;

builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new OpenApiInfo { Title = "probari_backend", Version = "v1" });
    c.CustomSchemaIds(x => x.FullName);
    c.AddSecurityDefinition("Bearer", new OpenApiSecurityScheme
    {
        In = ParameterLocation.Header,
        Description = "Please enter token",
        Name = "Authorization",
        Type = SecuritySchemeType.Http,
        BearerFormat = "JWT",
        Scheme = "bearer"
    });
    c.AddSecurityRequirement(new OpenApiSecurityRequirement
                {
                    {
                        new OpenApiSecurityScheme
                        {
                            Reference = new OpenApiReference
                            {
                                Type=ReferenceType.SecurityScheme,
                                Id="Bearer"
                            }
                        },
                        new string[]{}
                    }
                });
});

--------------------------------------