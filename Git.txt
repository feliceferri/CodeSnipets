LIST CURRENT USER

git config --list  

----------------------------

CHANGE ASSOCIATED ACCOUNT (VS CODE)

git config --global user.email "fXXX@XXXX.com" 
git config --global user.name "Felice Ferri"


VS CODE INSTALL

GitHub Pull Requests and Issues   => Use User Button (Bottom Left Navigation Bar) to sign in in github



ASOCIATE GIT ACCOUNT WITH VS CODE FOR SSH

Created an SSH KEY in Git UI => Help => Show SSH key
Went into the Github page => Settings => SSH and GPG Keys and copied it there with all including hte ssh-rsa prefix
In VS Code did => git clone git@github.com:daxeos/mono.git --recurse-submodules

-----------------------


git switch -c feliceDev  (Creates a new brach if it doesnt exist)

I can pull from other branches into my branch just by using git pull origin chao-dev

----------------

git clone https://xxx

git init  (to make a folder trackeable (no need to have a remote repo yet))

git remote add origin https://xxxxx  (To attach a repo to the folder where I did the git init)

git status  
​
git add .   (to add everything if you want to, or do "git add <filename>")
​
git commit -m <message>   (to commit the changes )
​
git push origin <branch-name>

git checkout 900cfcf (allows to check a file from an older commit)
git checkout 900cfcf index.html (un solo archivo)
git checkout -- index.html (elimina los cambios, y devuelve el archivo como estaba en el ultimo commit antes del checkout anterior)
git checkout -b feliceDev  (Create a new branch)

git remote show origin  (shows the url and the branches)
git remote add origin https://Ferrisoft@bitbucket.org/Ferrisoft/git-test.git  (asocio el repositorio online)

git fetch //retrieves all the remote branches

git log --oneline (list of all the commits)

git reset HEAD index.html  (lo quita del staging area, queda marcado como modificado)
                           en un segunda explicacion, habla de como si tengo cambios que no le hecho commit
 			   y hago un reset, la carpeta queda como estaba en el ultimo commit


-----------------------------------------

LIST ALL BRANCHES SORTED BY COMMIT DATE

git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

--------------------------------------------

CHERRY PICK

Azure Dev Ops => Find the Commit => 3 dots at the right => Copy Full SHA

git cherry-pick be32179c5969d7ba4c982d27fe57xxxxxxx


