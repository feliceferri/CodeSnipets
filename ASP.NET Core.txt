ERRORS HANDLING

ModelState.AddModelError(string.Empty, "There is not User assigned");


 @if (!ViewContext.ViewData.ModelState.IsValid)
    {
        var sb = new System.Text.StringBuilder();
        foreach (var modelState in ViewContext.ViewData.ModelState.Values)
        {
            foreach (var error in modelState.Errors)
            {
                sb.Append(error.ErrorMessage);
            }
        }
       <div class="alert alert-danger alert-dismissible fade show" role="alert" style="width:100%">
    @sb.ToString()
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

    }


------------------------------------------------------------------------

PARTIAL VIEW 

  <div class="form-group">
                                <span asp-validation-for="DeviceIdToAnalize" class="text-danger"></span>
                                <label>Device Id:</label>
                                <input class="form-control" asp-for="DeviceIdToAnalize" />
                            </div>
 <input type="submit" value="Run Device Analysis" class="btn btn-primary" id="centered-submit"
 onclick="DeviceAnalysis(document.getElementById('@nameof(Model.DeviceIdToAnalize)').value)"/>

<tbody id="MainTable">
	 <partial name="_ListDailyFeeds" model="Model" />
</tbody>

<script>
    function DeviceAnalysis(value) {

        $("body").css("cursor", "progress");

        try {
            $.ajax({
                type: "POST",
                url: "/Troubleshooting/DeviceAnalysis?DeviceIdToAnalize=" + value,
                //data: SchValues,
                //contentType: "application/json; charset=utf-8",
                success: function (response) {


                    $('#DeviceAnalysis').empty();
                    $('#DeviceAnalysis').append(response);

                },
                failure: function (response) {
                    alert('Error: ' + response);
                }
            });
        }
        catch (err) {

        }
        finall {
            $("body").css("cursor", "default");
        }
    }
</script>

  public async Task<ActionResult> RefreshGrid(bool Filter)
        {
            try
            {

                List<DailyDataFeed> res = null;
                if (Filter == true)
                {
                    res = await _context.DailyDataFeeds.Where(x => Codes.Contains(x.PointCode)).OrderByDescending(x => x.IssueDate).Take(100).ToListAsync();
                }
                else
                {
                    res= await _context.DailyDataFeeds.OrderByDescending(x => x.IssueDate).Take(500).ToListAsync();
                }
                
                return PartialView("~/Views/DailyDataFeeds/_ListDailyFeeds.cshtml", res);
                
            }
            catch (Exception ex)
            {
                return null;
            }
        }


----------------------------------------------------------------------------------------
INJECT HttpContext in AplicationDbContext

En Startup.cs => en ConfigureServices agregar: 

            services.AddSingleton<IHttpContextAccessor, HttpContextAccessor>();

En ApplicationDbContext =>

 private IHttpContextAccessor _contextAccessor = null;

public ApplicationDbContext():base()
        {
            //FF: Couldn't make this work. Missing a piece, althugh is not really needed as I'm injecting ApplicationDbContext on the Controller and thats it
            IServiceCollection services = new ServiceCollection();
            var serviceProvider = services.BuildServiceProvider();
            _contextAccessor = (IHttpContextAccessor)serviceProvider.GetService(typeof(IHttpContextAccessor));
        }

        public ApplicationDbContext(IHttpContextAccessor contextAccessor)
        {
            _contextAccessor = contextAccessor;
        }
        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options, IHttpContextAccessor contextAccessor)
            : base(options)
        {
            _contextAccessor = contextAccessor;
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer(_contextAccessor.HttpContext.Session.GetString("databaseconnection"));
            base.OnConfiguring(optionsBuilder);
        }

--------------------------------

UI Local Time <time> (JS)

En Shared\_Layout.cshtml

<script>
        //FF: Way to use it in razor => <time>Model.CreatedDateUtc.ToString("yyyy-MM-ddTHH:mm:ssZ")</time> InvarianCulture may be needed to add, in case having trouble with :
        var elements = document.getElementsByTagName('time');
        Array.prototype.forEach.call(elements, function (element) {
            utctimeval = element.innerText;
            if (utctimeval) {
                var date = new Date(utctimeval);
                element.innerText = date.toLocaleString();
            }
        });
    </script>

---------------------------------

FULL WIDTH PAGES (Not Container)

En Shared\_Layout.cshtml

    <div class="container">
        <main role="main" class="pb-3">
            <h1 style="margin-top:15px">@ViewData["Title"]</h1>
            @RenderBody()
        </main>
    </div>

    <div class="container-fluid">
        @RenderSection("FullWidth", required: false)
    </div>


En los pages

@section FullWidth
{
  Poner codigo HTML aqui adentro
}

OTRA FORMA ES PONER ESTO EN LA PANTALLA DONDE SE QUIERE EL FULL SCREEN

 <style>
        .container {
            width: 100% !important
        }
    </style>

---------------------------------


UPLOAD A FILE

In the Model:

[NotMapped]
public IFormFile floorPlanFile { get; set; }

In the View:

<form enctype="multipart/form-data" asp-action="Create">

 <div class="form-group">
            <label asp-for="floorPlanFile">Select Floor plan:</label>

            <div style="margin-top:5px">
                <i class="fa fa-camera" style="cursor: pointer;font-size: 30px;opacity: 0.6;" onclick="document.getElementById('floorPlanFile').click();"></i>
                <span id="SelectedFileLabel" class="name" onclick="document.getElementById('floorPlanFile').click();" style="cursor:pointer;margin-left:10px;">No file selected</span>
                <input asp-for="floorPlanFile" type="file" id="floorPlanFile" onchange="document.getElementById('SelectedFileLabel').innerText = this.value;" style=" display: none;">
            </div>
        </div>

On the Controller:


----------------------------

MODAL  (With Back Button, Form and PartialView)

<a class="btn btn-success" asp-action="Create" data-toggle="modal" data-target="#exampleModal"><i class="fas fa-plus-circle fa-lg"></i>&nbsp; Add New Employee</a>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form enctype="multipart/form-data" asp-action="Create" class="text-center">
            <div class="modal-content">
                <div class="modal-header"  style="padding:0px">
                    
                    <table width="100%" style="margin:0% 2% 0% 2%">
                        <tr>
                            <td width="20%">
                                <a asp-action="Index" class="fa-pull-left"><i class="fas fa-arrow-circle-left fa-2x"></i></a>
                            </td>
                            <td width="60%">
                                <p style="text-align:center"><h4>New Map/Location</h4></p>
                            </td>
                            <td width="20%" style="vertical-align:top;padding-top:5px">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close" >
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </td>
                        </tr>
                    </table>
                        
                    
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="offset-1 col-10">
                            <br />
                            <partial name="_Create" model="Model.newLocation" />
                            <br />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Create" class="btn btn-success fa-pull-right" />
                </div>
            </div>
        </form>
    </div>
</div>

-----------------------------------------------------------------------------

FORM SUBMIT ON SELECT/COMBOBOX SELECTION (Without a submit button)

<form  asp-action="LocationMap" asp-controller="Management" method="post">
	 <select asp-for="locationId" asp-items="Model.locations_select" onchange="this.form.submit();">
        	<option disabled selected style="text-align: center ">Select Location</option>
         </select>
</<form 